name: 'CI - PR'

on:
  pull_request:
    branches:
      - main
      - 2021.1.x

jobs:
  check:
    runs-on: 'stream-ci-large'
    steps:
      - name: 'Configure: checkout stream-applications@${{ inputs.branch }}'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - name: 'Configure: checkout'
        uses: actions/checkout@v3
        with:
          ref: 'main'
          path: 'main-build'
      - name: 'Configure: Ensure scripts are executable'
        shell: bash
        run: find . -type f -name "*.sh" -exec chmod a+x '{}' \;
      - name: 'Configure: Install Java'
        if: ${{ github.base_ref != 'main' }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ needs.parameters.outputs.jdk_build }}
      - name: 'Configure: Install GraalVM'
        if: ${{ github.base_ref == 'main' }}
        uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          #          components: 'native-image' # add when starting native builds.
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Configure: cache for maven dependencies'
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-repo-${{ hashFiles('**/pom.xml') }}-pr
          restore-keys: |
            maven-repo-${{ hashFiles('**/pom.xml') }}-pr
            maven-repo-${{ hashFiles('**/pom.xml') }}
            maven-repo-
      - name: 'Configure: Install xsltproc'
        uses: ./.github/actions/install-xsltproc
      - name: 'Action: build initial dependencies'
        shell: bash
        run: |
          BUILD_DIR=./main-build
          MAVEN_OPT="-U -B -T 1C -s $BUILD_DIR/.settings.xml ${{ inputs.verbose && '--debug' || '' }}"
          echo "::notice ::building - stream-applications-build"
          set -e
          ./mvnw $MAVEN_OPT install -DskipTests -f stream-applications-build
          set +e
          echo "::notice ::building - functions"
          set -e
          ./mvnw $MAVEN_OPT install -DskipTests -f functions
          set +e
          echo "::notice ::building - stream-applications-core"
          set -e
          ./mvnw $MAVEN_OPT deploy -DskipTests -f applications/stream-applications-core
          set +e
          echo "::notice ::core build completed"
      - name: 'Configure: get changed files'
        id: changed-files
        uses: tj-actions/changed-files@v34
      - name: 'Action: verify changed modules'
        run: |
          BUILD_DIR=./main-build
          $BUILD_DIR/create-matrices.sh
          $BUILD_DIR/scripts/determine-modules-changed.sh "${{ steps.changed-files.outputs.all_changed_files }}"
          MODULES=$(jq '.[]' modules.json | sed 's/\"//g')
          for module in $MODULES; do
            echo "::info ::verify module $module"
            ./mvnw $MAVEN_OPT verify -f $module -amd
          done
          
